const e={currentTaskBody:null,currentTaskId:null};(()=>{const s=document.getElementById("editModal"),c=document.getElementById("taskBody"),l=document.getElementById("cancelEdit"),o=document.getElementById("saveEdit"),d=document.getElementById("editErrorMsg");document.querySelectorAll(".edit-btn").forEach(t=>{t.addEventListener("click",i=>{const r=i.currentTarget;e.currentTaskBody=r.dataset.task||"",e.currentTaskId=r.dataset.id||"",c.value=e.currentTaskBody,s.classList.remove("hidden")})}),l.addEventListener("click",()=>{s.classList.add("hidden"),a()}),o.addEventListener("click",async()=>{const t=c.value;if(!t.trim()){n("Task body cannot be empty");return}if(!e.currentTaskId){n("Missing task ID");return}try{if((await fetch("/tasks/update",{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({body:t,id:e.currentTaskId})})).ok){const r=document.getElementById(e.currentTaskId+"_taskBody");if(r===null){n("Failed to find what task was just edited!");return}r.innerText=t;const u=r.closest("li")?.querySelector(".edit-btn");u&&(u.dataset.task=t),a()}else n("Failed to update task")}catch(i){console.error("Update failed:",i),n("Error updating task")}s.classList.add("hidden")});function n(t){d.classList.remove("hidden"),d.innerText=t}function a(){d.classList.contains("hidden")||d.classList.add("hidden"),d.innerText=""}})();(()=>{const s=document.getElementById("deleteModal"),c=document.getElementById("cancelDelete"),l=document.getElementById("confirmDelete"),o=document.getElementById("allTasks");document.querySelectorAll(".delete-btn").forEach(d=>{d.addEventListener("click",n=>{const a=n.currentTarget;e.currentTaskId=a.dataset.id||"",e.currentTaskBody=a.dataset.task||"";const t=document.getElementById("taskBody-delete");o.querySelectorAll("li:not(.hidden)").length,e.currentTaskBody||e.currentTaskBody===""?t.innerText=e.currentTaskBody:t.innerText="NOT_FOUND",s.classList.remove("hidden")})}),c.addEventListener("click",()=>{s.classList.add("hidden")}),l.addEventListener("click",async()=>{if(!e.currentTaskId){console.error("Missing task ID");return}try{(await fetch("/tasks/delete",{method:"DELETE",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:e.currentTaskId})})).ok&&(document.getElementById(e.currentTaskId+"_taskli").classList.add("hidden"),o.querySelectorAll("li:not(.hidden)").length==0&&document.getElementById("allTasksDeleted").classList.remove("hidden"))}catch(d){console.error("failed to delete task:",d)}s.classList.add("hidden")})})();
